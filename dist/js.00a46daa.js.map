{"version":3,"sources":["js/api.js","js/index.js"],"names":["apiKey","apiUrl","query","fetchGraphqlData","username","requestOptions","method","headers","body","JSON","stringify","variables","login","redirect","result","fetch","then","response","json","usernameForm","document","getElementById","errorDiv","mainContent","querySelector","onsubmit","handleSubmit","event","preventDefault","gitUsername","target","elements","value","loading","userData","errors","message","console","log","data","setAttribute","error","removeAttribute","state"],"mappings":";;ACEA;;;;ADFA,ACKA,MDLMA,ACKAmB,MDLM,GAAI,GCKE,GAAGC,IDLN,ICKc,CAACC,cAAT,CAAwB,cAAxB,CAArB,ODL6C,EAA7C;AACA,ACKA,MDLMpB,ACKAqB,MDLM,ECKE,GAAGF,QAAQ,CAACC,cAAT,CAAwB,MDLzC,CCKiB,CAAjB;ADHA,ACIA,MDJMnB,ACIAqB,KDJK,GAAI,GCIE,GAAGH,QAAQ,CAACI,aAAT,CAAuB,OAAvB,CAApB;ADHA,ACIAL,YAAY,CAACM,QAAb,GAAwBC,YAAxB;ADHA;AACA,ACKA,eAAeA,YAAf,CAA4BC,KAA5B,EAAmC;ADJnC,ACKIA,EAAAA,KAAK,CAACC,cAAN;ADJJ,ACKI,QAAMC,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAaC,QAAb,CAAsB3B,QAAtB,CAA+B4B,KAAnD;ADJJ;AACA,ACII,MAAIH,WAAJ,EAAiB;ADHrB,ACIQI,IAAAA,OAAO,CAAC,IAAD,CAAP,CADa,CAEb;ADJR;AACA,ACIQ,QAAI;ADHZ,ACIW,YAAMC,QAAQ,GAAG,MAAM,kBAAiBL,WAAjB,CAAvB;ADHX;AACA,ACGW,UAAGK,QAAQ,CAACC,MAAZ,EAAmB;ADF9B,ACGa,cAAOD,QAAQ,CAACC,MAAT,CAAgB,CAAhB,EAAmBC,OAA1B;ADFb,ACGS,OAFE,MAEI;ADFf,ACEiBC,EDlBjB,MCkBiBA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,IAArB;AAA2B,OAJhC,CAKD;ADAV,ACCU,eDDKpC,gBAAf,CAAgCC,QAAhC,EAAyC;AACtC,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,ACDGY,IDCHZ,ECDGY,KDCI,EAAE,KCDM,CAACqB,YAAb,CAA0B,QAA1B,EAAoC,EAApC,EAPC,CAQD;ADCD,ACAA,uBDAiBxC,MADV;AAEP,ACAC,sBDAe;AAFT,ACIR,KDNkB,ACNnB,CAaA,OAAOyC,KAAP,EAAc;ADFdjC,ACGI6B,IDHJ7B,ECGI6B,EDHA,EAAE5B,GCGK,CDHD,ACGE6B,CDHD5B,ECGP,CAAY+B,KAAZ,CDHE,CAAe;AACnBvC,ACGEoB,MDHFpB,ACGEoB,KDJiB,GCIT,CAACoB,eAAT,CAAyB,QAAzB;ADFF/B,ACGD,KAhBD,CDaEA,QCGQ,CDHC,EAAE;AAACC,ACIVqB,MAAAA,EDJUrB,KAAK,ACIR,CAAC,CDJSR,ICIV,CAAP;ADJS,ACKZ;ADPoB,ACSxB,KDTS,CALa;AASnBS,ACOP,IDPOA,QAAQ,EAAE;AATS,GAAvB;AAYE,ACMN,QDNYC,CCMHmB,KDNS,ECMlB,CDNqB,ACMJU,KAAjB,CDN2B5B,CCMH,IDNQ,CAACd,MAAD,EAASI,cAAT,CAAL,CACpBW,IADoB,CACfC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADG,CAArB;AAGA,ACIF,SDJSJ,MAAP;AAEJ,ACGE,MAAI6B,KAAJ,EAAW;AACP;AACAN,IAAAA,OAAO,CAACC,GDFAnC,ACER,CAAY,YAAZ;AACH,GAHD,MAGO;AACH;AACAkC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACJ","file":"js.00a46daa.js","sourceRoot":"..","sourcesContent":["const apiKey = `Bearer ${process.env.API_KEY}`\nconst apiUrl = process.env.API_URL\n\nconst query = `query user($login:String!) {\n    user(login: $login) { \n      avatarUrl\n      bio\n      bioHTML\n      repositories(first: 20){\n        nodes{\n          stargazerCount\n          updatedAt\n          primaryLanguage{\n            color\n            name\n          }\n        }\n      }\n    }\n}`\n    \n    \n async function fetchGraphqlData(username){\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n          \"Authorization\": apiKey,\n          \"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n          query,\n          variables: {login: username}\n      }),\n        redirect: 'follow'\n      };\n\n      const result = await fetch(apiUrl, requestOptions)\n      .then(response => response.json())\n\n      return result\n\n }   \n\n\n export default fetchGraphqlData","\n\nimport fetchGraphqlData from './api'\n\n\nconst usernameForm = document.getElementById('usernameForm');\nconst errorDiv = document.getElementById('error');\nconst mainContent = document.querySelector('.main')\nusernameForm.onsubmit = handleSubmit;\n\n\nasync function handleSubmit(event) {\n    event.preventDefault();\n    const gitUsername = event.target.elements.username.value\n    if (gitUsername) {\n        loading(true)\n        //fire the fetch\n        try {\n           const userData = await fetchGraphqlData(gitUsername)\n           if(userData.errors){\n             throw (userData.errors[0].message)\n        } else { console.log(userData.data)}\n           //pass user data to html template\n           //hide the user inpur form\n           usernameForm.setAttribute('hidden', '')\n           //introduce the ui for the profile page\n          // mainContent.classList.remove('is-hidden')\n           //go to the profile url\n           \n        }\n        catch (error) {\n            console.log(error)\n            errorDiv.removeAttribute('hidden')\n        } finally {\n            loading(false)\n        }\n\n    }\n\n}\n\nfunction loading(state) {\n    //set the full page to show the loading animation\n    if (state) {\n        //show animation\n        console.log(\"loading on\")\n    } else {\n        //stop animation\n        console.log(\"loading off\")\n    }\n}\n"]}